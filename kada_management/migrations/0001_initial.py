# Generated by Django 4.2.13 on 2024-07-21 00:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_commercial', models.BooleanField(default=False)),
                ('is_technician', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diagnostic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('micro', models.BooleanField()),
                ('haut_parleur', models.BooleanField()),
                ('systeme_charge', models.BooleanField()),
                ('ecran', models.BooleanField()),
                ('empreinte', models.BooleanField()),
                ('face_id', models.BooleanField()),
                ('port_sim', models.BooleanField()),
                ('pochette', models.BooleanField()),
                ('reseau', models.BooleanField()),
                ('batterie', models.BooleanField()),
                ('boutons_allumage', models.BooleanField()),
                ('boutons_volume', models.BooleanField()),
                ('conver', models.BooleanField()),
                ('torche', models.BooleanField()),
                ('diagnostic_type', models.CharField(choices=[('initial', 'Initial'), ('technician', 'Technician'), ('final', 'Final')], max_length=20)),
                ('numero_diagnostic', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('marque', models.CharField(max_length=255)),
                ('modele', models.CharField(max_length=255)),
                ('imei', models.CharField(max_length=15, unique=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telephones', to='kada_management.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reparation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_debut', models.DateTimeField(auto_now_add=True)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('numero_reparation', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('commercial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reparations_as_commercial', to=settings.AUTH_USER_MODEL)),
                ('final_diagnostic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='final_diagnostic', to='kada_management.diagnostic')),
                ('initial_diagnostic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initial_diagnostic', to='kada_management.diagnostic')),
                ('technician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reparations_as_technician', to=settings.AUTH_USER_MODEL)),
                ('technician_diagnostic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technician_diagnostic', to='kada_management.diagnostic')),
                ('telephone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kada_management.telephone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('numero_fature', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reparation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='kada_management.reparation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='telephone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kada_management.telephone'),
        ),
        migrations.AddField(
            model_name='diagnostic',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
